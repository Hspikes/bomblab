phase_1:   
   0x00005555555555ab <+0>:	endbr64
   0x00005555555555af <+4>:	sub    $0x8,%rsp
   0x00005555555555b3 <+8>:	lea    0x1af6(%rip),%rsi        # 0x5555555570b0
   0x00005555555555ba <+15>:	call   0x555555555adb <strings_not_equal>
   0x00005555555555bf <+20>:	test   %eax,%eax
   0x00005555555555c1 <+22>:	jne    0x5555555555c8 <phase_1+29>
   0x00005555555555c3 <+24>:	add    $0x8,%rsp
   0x00005555555555c7 <+28>:	ret
   0x00005555555555c8 <+29>:	call   0x555555555bef <explode_bomb>
   0x00005555555555cd <+34>:	jmp    0x5555555555c3 <phase_1+24>

phase_2:
   0x00005555555555e2 <+19>:	mov    %rax,0x18(%rsp)
   0x00005555555555e7 <+24>:	xor    %eax,%eax
   0x00005555555555e9 <+26>:	mov    %rsp,%rsi
   0x00005555555555ec <+29>:	call   0x555555555c47 <read_six_numbers>
   0x00005555555555f1 <+34>:	cmpl   $0x0,(%rsp)
   0x00005555555555f5 <+38>:	jne    0x5555555555fe <phase_2+47>
   0x00005555555555f7 <+40>:	cmpl   $0x1,0x4(%rsp)
   0x00005555555555fc <+45>:	je     0x555555555603 <phase_2+52>
   0x00005555555555fe <+47>:	call   0x555555555bef <explode_bomb>
   0x0000555555555603 <+52>:	mov    %rsp,%rbx
   0x0000555555555606 <+55>:	lea    0x10(%rsp),%rbp
   0x000055555555560b <+60>:	jmp    0x555555555616 <phase_2+71>
   0x000055555555560d <+62>:	add    $0x4,%rbx
   0x0000555555555611 <+66>:	cmp    %rbp,%rbx
   0x0000555555555614 <+69>:	je     0x555555555627 <phase_2+88>
   0x0000555555555616 <+71>:	mov    0x4(%rbx),%eax
   0x0000555555555619 <+74>:	add    (%rbx),%eax
   0x000055555555561b <+76>:	cmp    %eax,0x8(%rbx)
   0x000055555555561e <+79>:	je     0x55555555560d <phase_2+62>
   0x0000555555555620 <+81>:	call   0x555555555bef <explode_bomb>
   0x0000555555555625 <+86>:	jmp    0x55555555560d <phase_2+62>
   0x0000555555555627 <+88>:	mov    0x18(%rsp),%rax
   0x000055555555563d <+110>:	ret

phase_3:
   0x0000555555555654 <+17>:	mov    %rax,0x8(%rsp)
   0x0000555555555659 <+22>:	xor    %eax,%eax
   0x000055555555565b <+24>:	lea    0x4(%rsp),%rcx
   0x0000555555555660 <+29>:	mov    %rsp,%rdx
   0x0000555555555663 <+32>:	lea    0x1ca6(%rip),%rsi        # 0x555555557310
   0x000055555555566a <+39>:	call   0x555555555300 <__isoc99_sscanf@plt>
   0x000055555555566f <+44>:	cmp    $0x1,%eax
   0x0000555555555672 <+47>:	jle    0x555555555692 <phase_3+79>
   0x0000555555555674 <+49>:	cmpl   $0x7,(%rsp)
   0x0000555555555678 <+53>:	ja     0x555555555718 <phase_3+213>
   0x000055555555567e <+59>:	mov    (%rsp),%eax
   0x0000555555555681 <+62>:	lea    0x1a88(%rip),%rdx        # 0x555555557110
   0x0000555555555688 <+69>:	movslq (%rdx,%rax,4),%rax
   0x000055555555568c <+73>:	add    %rdx,%rax
   0x000055555555568f <+76>:	notrack jmp *%rax
   0x0000555555555692 <+79>:	call   0x555555555bef <explode_bomb>
   0x0000555555555697 <+84>:	jmp    0x555555555674 <phase_3+49>
   0x0000555555555699 <+86>:	mov    $0xde,%eax
   0x000055555555569e <+91>:	sub    $0x38b,%eax
   0x00005555555556a3 <+96>:	add    $0x1fc,%eax
   0x00005555555556a8 <+101>:	sub    $0xcc,%eax
   0x00005555555556ad <+106>:	add    $0xcc,%eax
   0x00005555555556b2 <+111>:	sub    $0xcc,%eax
   0x00005555555556b7 <+116>:	add    $0xcc,%eax
   0x00005555555556bc <+121>:	sub    $0xcc,%eax
   0x00005555555556c1 <+126>:	cmpl   $0x5,(%rsp)
   0x00005555555556c5 <+130>:	jg     0x5555555556cd <phase_3+138>
   0x00005555555556c7 <+132>:	cmp    %eax,0x4(%rsp)
   0x00005555555556cb <+136>:	je     0x5555555556d2 <phase_3+143>
   0x00005555555556cd <+138>:	call   0x555555555bef <explode_bomb>
   0x00005555555556d2 <+143>:	mov    0x8(%rsp),%rax
   0x00005555555556d7 <+148>:	sub    %fs:0x28,%rax
   0x00005555555556e0 <+157>:	jne    0x555555555724 <phase_3+225>
   0x00005555555556e2 <+159>:	add    $0x18,%rsp
   0x00005555555556e6 <+163>:	ret
   0x00005555555556e7 <+164>:	mov    $0x0,%eax
   0x00005555555556ec <+169>:	jmp    0x55555555569e <phase_3+91>
   0x00005555555556ee <+171>:	mov    $0x0,%eax
   0x00005555555556f3 <+176>:	jmp    0x5555555556a3 <phase_3+96>
   0x00005555555556f5 <+178>:	mov    $0x0,%eax
   0x00005555555556fa <+183>:	jmp    0x5555555556a8 <phase_3+101>
   0x00005555555556fc <+185>:	mov    $0x0,%eax
   0x0000555555555701 <+190>:	jmp    0x5555555556ad <phase_3+106>
   0x0000555555555703 <+192>:	mov    $0x0,%eax
   0x0000555555555708 <+197>:	jmp    0x5555555556b2 <phase_3+111>
   0x000055555555570a <+199>:	mov    $0x0,%eax
   0x000055555555570f <+204>:	jmp    0x5555555556b7 <phase_3+116>
   0x0000555555555711 <+206>:	mov    $0x0,%eax
   0x0000555555555716 <+211>:	jmp    0x5555555556bc <phase_3+121>
   0x0000555555555718 <+213>:	call   0x555555555bef <explode_bomb>
   0x000055555555571d <+218>:	mov    $0x0,%eax
   0x0000555555555722 <+223>:	jmp    0x5555555556c1 <phase_3+126>

phase_4:
   0x0000555555555770 <+17>:	mov    %rax,0x8(%rsp)
   0x0000555555555775 <+22>:	xor    %eax,%eax
   0x0000555555555777 <+24>:	lea    0x4(%rsp),%rcx
   0x000055555555577c <+29>:	mov    %rsp,%rdx
   0x000055555555577f <+32>:	lea    0x1b8a(%rip),%rsi        # 0x555555557310
   0x0000555555555786 <+39>:	call   0x555555555300 <__isoc99_sscanf@plt>
   0x000055555555578b <+44>:	cmp    $0x2,%eax
   0x000055555555578e <+47>:	jne    0x555555555796 <phase_4+55>
   0x0000555555555790 <+49>:	cmpl   $0xe,(%rsp)
   0x0000555555555794 <+53>:	jbe    0x55555555579b <phase_4+60>
   0x0000555555555796 <+55>:	call   0x555555555bef <explode_bomb>
   0x000055555555579b <+60>:	mov    $0xe,%edx
   0x00005555555557a0 <+65>:	mov    $0x0,%esi
   0x00005555555557a5 <+70>:	mov    (%rsp),%edi
   0x00005555555557a8 <+73>:	call   0x555555555729 <func4>
   0x00005555555557ad <+78>:	cmp    $0x12,%eax
   0x00005555555557b0 <+81>:	jne    0x5555555557b9 <phase_4+90>
   0x00005555555557b2 <+83>:	cmpl   $0x12,0x4(%rsp)
   0x00005555555557b7 <+88>:	je     0x5555555557be <phase_4+95>
   0x00005555555557b9 <+90>:	call   0x555555555bef <explode_bomb>
   0x00005555555557be <+95>:	mov    0x8(%rsp),%rax
   0x00005555555557d2 <+115>:	ret

func4:
   0x000055555555572e <+5>:	mov    %edx,%eax
   0x0000555555555730 <+7>:	sub    %esi,%eax
   0x0000555555555732 <+9>:	mov    %eax,%ebx
   0x0000555555555734 <+11>:	shr    $0x1f,%ebx
   0x0000555555555737 <+14>:	add    %eax,%ebx
   0x0000555555555739 <+16>:	sar    $1,%ebx
   0x000055555555573b <+18>:	add    %esi,%ebx
   0x000055555555573d <+20>:	cmp    %edi,%ebx
   0x000055555555573f <+22>:	jg     0x555555555747 <func4+30>
   0x0000555555555741 <+24>:	jl     0x555555555753 <func4+42>
   0x0000555555555743 <+26>:	mov    %ebx,%eax
   0x0000555555555746 <+29>:	ret
   0x0000555555555747 <+30>:	lea    -0x1(%rbx),%edx
   0x000055555555574a <+33>:	call   0x555555555729 <func4>
   0x000055555555574f <+38>:	add    %eax,%ebx
   0x0000555555555751 <+40>:	jmp    0x555555555743 <func4+26>
   0x0000555555555753 <+42>:	lea    0x1(%rbx),%esi
   0x0000555555555756 <+45>:	call   0x555555555729 <func4>
   0x000055555555575b <+50>:	add    %eax,%ebx
   0x000055555555575d <+52>:	jmp    0x555555555743 <func4+26>

phase_5:
   0x00005555555557d8 <+0>:	endbr64
   0x00005555555557e1 <+9>:	mov    %rdi,%rbx
   0x00005555555557ed <+21>:	mov    %rax,0x8(%rsp)
   0x00005555555557f2 <+26>:	xor    %eax,%eax
   0x00005555555557f4 <+28>:	call   0x555555555aba <string_length>
   0x00005555555557f9 <+33>:	cmp    $0x6,%eax
   0x00005555555557fc <+36>:	jne    0x555555555853 <phase_5+123>

   0x00005555555557fe <+38>:	mov    $0x0,%eax
   0x0000555555555803 <+43>:	lea    0x1926(%rip),%rcx        # 0x555555557130 <array.0>
   0x000055555555580a <+50>:	movzbl (%rbx,%rax,1),%edx
   0x000055555555580e <+54>:	and    $0xf,%edx
   0x0000555555555811 <+57>:	movzbl (%rcx,%rdx,1),%edx
   0x0000555555555815 <+61>:	mov    %dl,0x1(%rsp,%rax,1)
   0x0000555555555819 <+65>:	add    $0x1,%rax
   0x000055555555581d <+69>:	cmp    $0x6,%rax
   0x0000555555555821 <+73>:	jne    0x55555555580a <phase_5+50>

   0x0000555555555823 <+75>:	movb   $0x0,0x7(%rsp)
   0x0000555555555828 <+80>:	lea    0x1(%rsp),%rdi
   0x000055555555582d <+85>:	lea    0x18ca(%rip),%rsi        # 0x5555555570fe
   0x0000555555555834 <+92>:	call   0x555555555adb <strings_not_equal>
   0x0000555555555839 <+97>:	test   %eax,%eax
   0x000055555555583b <+99>:	jne    0x55555555585a <phase_5+130>
   0x000055555555583d <+101>:	mov    0x8(%rsp),%rax
   0x0000555555555842 <+106>:	sub    %fs:0x28,%rax
   0x000055555555584b <+115>:	jne    0x555555555861 <phase_5+137>
   0x000055555555584d <+117>:	add    $0x10,%rsp
   0x0000555555555851 <+121>:	pop    %rbx
   0x0000555555555852 <+122>:	ret
   0x0000555555555853 <+123>:	call   0x555555555bef <explode_bomb>
   0x0000555555555858 <+128>:	jmp    0x5555555557fe <phase_5+38>
   0x000055555555585a <+130>:	call   0x555555555bef <explode_bomb>
   0x000055555555585f <+135>:	jmp    0x55555555583d <phase_5+101>
# maduiersnfotvbylSo you think you can stop the bomb with ctrl-c, do you?

phase_6:
   0x000055555555587f <+25>:	mov    %rax,0x58(%rsp)
   0x0000555555555884 <+30>:	xor    %eax,%eax
   0x0000555555555886 <+32>:	mov    %rsp,%r13
   0x0000555555555889 <+35>:	mov    %r13,%rsi
   0x000055555555588c <+38>:	call   0x555555555c47 <read_six_numbers>

   0x0000555555555891 <+43>:	mov    $0x1,%r14d
   0x0000555555555897 <+49>:	mov    %rsp,%r12
   0x000055555555589a <+52>:	jmp    0x5555555558c4 <phase_6+94>
   0x000055555555589c <+54>:	call   0x555555555bef <explode_bomb>
   0x00005555555558a1 <+59>:	jmp    0x5555555558d3 <phase_6+109>
   0x00005555555558a3 <+61>:	add    $0x1,%rbx
   0x00005555555558a7 <+65>:	cmp    $0x5,%ebx
   0x00005555555558aa <+68>:	jg     0x5555555558bc <phase_6+86>
   0x00005555555558ac <+70>:	mov    (%r12,%rbx,4),%eax
   0x00005555555558b0 <+74>:	cmp    %eax,0x0(%rbp)
   0x00005555555558b3 <+77>:	jne    0x5555555558a3 <phase_6+61>
   0x00005555555558b5 <+79>:	call   0x555555555bef <explode_bomb>
   0x00005555555558ba <+84>:	jmp    0x5555555558a3 <phase_6+61>
   0x00005555555558bc <+86>:	add    $0x1,%r14
   0x00005555555558c0 <+90>:	add    $0x4,%r13
   0x00005555555558c4 <+94>:	mov    %r13,%rbp
   0x00005555555558c7 <+97>:	mov    0x0(%r13),%eax
   0x00005555555558cb <+101>:	sub    $0x1,%eax
   0x00005555555558ce <+104>:	cmp    $0x5,%eax
   0x00005555555558d1 <+107>:	ja     0x55555555589c <phase_6+54>
   0x00005555555558d3 <+109>:	cmp    $0x5,%r14d
   0x00005555555558d7 <+113>:	jg     0x5555555558de <phase_6+120>
   0x00005555555558d9 <+115>:	mov    %r14,%rbx
   0x00005555555558dc <+118>:	jmp    0x5555555558ac <phase_6+70> 
   # 不是验重我吃

   0x00005555555558de <+120>:	mov    $0x0,%esi
   0x00005555555558e3 <+125>:	mov    (%rsp,%rsi,4),%ecx
   0x00005555555558e6 <+128>:	mov    $0x1,%eax
   0x00005555555558eb <+133>:	lea    0x391e(%rip),%rdx        # 0x555555559210 <node1>
   0x00005555555558f2 <+140>:	cmp    $0x1,%ecx
   0x00005555555558f5 <+143>:	jle    0x555555555902 <phase_6+156>
   0x00005555555558f7 <+145>:	mov    0x8(%rdx),%rdx
   0x00005555555558fb <+149>:	add    $0x1,%eax
   0x00005555555558fe <+152>:	cmp    %ecx,%eax
   0x0000555555555900 <+154>:	jne    0x5555555558f7 <phase_6+145>
   0x0000555555555902 <+156>:	mov    %rdx,0x20(%rsp,%rsi,8)
   0x0000555555555907 <+161>:	add    $0x1,%rsi
   0x000055555555590b <+165>:	cmp    $0x6,%rsi
   0x000055555555590f <+169>:	jne    0x5555555558e3 <phase_6+125>
   # 做映射 int 2 void*

   0x0000555555555911 <+171>:	mov    0x20(%rsp),%rbx
   0x0000555555555916 <+176>:	mov    (%rsp),%rax
   0x000055555555591b <+181>:	mov    %rax,0x8(%rbx)
   0x000055555555591f <+185>:	mov    0x30(%rsp),%rdx
   0x0000555555555924 <+190>:	mov    %rdx,0x8(%rax)
   0x0000555555555928 <+194>:	mov    0x38(%rsp),%rax
   0x000055555555592d <+199>:	mov    %rax,0x8(%rdx)
   0x0000555555555931 <+203>:	mov    0x40(%rsp),%rdx
   0x0000555555555936 <+208>:	mov    %rdx,0x8(%rax)
   0x000055555555593a <+212>:	mov    0x48(%rsp),%rax
   0x000055555555593f <+217>:	mov    %rax,0x8(%rdx)
   0x0000555555555943 <+221>:	movq   $0x0,0x8(%rax)
   # 

   0x000055555555594b <+229>:	mov    $0x5,%ebp
   0x0000555555555950 <+234>:	jmp    0x55555555595b <phase_6+245>
   0x0000555555555952 <+236>:	mov    0x8(%rbx),%rbx
   0x0000555555555956 <+240>:	sub    $0x1,%ebp
   0x0000555555555959 <+243>:	je     0x55555555596c <phase_6+262>
   0x000055555555595b <+245>:	mov    0x8(%rbx),%rax
   0x000055555555595f <+249>:	mov    (%rax),%eax
   0x0000555555555961 <+251>:	cmp    %eax,(%rbx)
   0x0000555555555963 <+253>:	jge    0x555555555952 <phase_6+236>
   0x0000555555555965 <+255>:	call   0x555555555bef <explode_bomb>
   0x000055555555596a <+260>:	jmp    0x555555555952 <phase_6+236>
   0x000055555555596c <+262>:	mov    0x58(%rsp),%rax
   0x0000555555555988 <+290>:	ret


phase_defused:
   0x0000555555555de0 <+0>:	endbr64
   0x0000555555555de4 <+4>:	sub    $0x78,%rsp
   0x0000555555555de8 <+8>:	mov    %fs:0x28,%rax
   0x0000555555555df1 <+17>:	mov    %rax,0x68(%rsp)
   0x0000555555555df6 <+22>:	xor    %eax,%eax
   0x0000555555555df8 <+24>:	mov    0x38f6(%rip),%edx        # 0x5555555596f4 <num_input_strings>
   0x0000555555555dfe <+30>:	cmp    $0x1,%edx
   0x0000555555555e01 <+33>:	je     0x555555555e1b <phase_defused+59>
   0x0000555555555e03 <+35>:	cmp    $0x6,%edx
   0x0000555555555e06 <+38>:	ja     0x555555555e22 <phase_defused+66>
   0x0000555555555e08 <+40>:	mov    %edx,%eax
   0x0000555555555e0a <+42>:	lea    0x15eb(%rip),%rcx        # 0x5555555573fc
   0x0000555555555e11 <+49>:	movslq (%rcx,%rax,4),%rax
   0x0000555555555e15 <+53>:	add    %rcx,%rax
   0x0000555555555e18 <+56>:	notrack jmp *%rax
   0x0000555555555e1b <+59>:	addl   $0xa,0x38ce(%rip)        # 0x5555555596f0 <score>
   0x0000555555555e22 <+66>:	lea    0x1531(%rip),%rsi        # 0x55555555735a
   0x0000555555555e29 <+73>:	mov    $0x1,%edi
   0x0000555555555e2e <+78>:	mov    $0x0,%eax
   0x0000555555555e33 <+83>:	call   0x555555555310 <__printf_chk@plt>
   0x0000555555555e38 <+88>:	mov    0x38b2(%rip),%edx        # 0x5555555596f0 <score>
   0x0000555555555e3e <+94>:	lea    0x138b(%rip),%rsi        # 0x5555555571d0
   0x0000555555555e45 <+101>:	mov    $0x1,%edi
   0x0000555555555e4a <+106>:	mov    $0x0,%eax
   0x0000555555555e4f <+111>:	call   0x555555555310 <__printf_chk@plt>
   0x0000555555555e54 <+116>:	cmpl   $0x6,0x3899(%rip)        # 0x5555555596f4 <num_input_strings>
   0x0000555555555e5b <+123>:	je     0x555555555ea6 <phase_defused+198>
   0x0000555555555e5d <+125>:	mov    0x68(%rsp),%rax
   0x0000555555555e62 <+130>:	sub    %fs:0x28,%rax
   0x0000555555555e6b <+139>:	jne    0x555555555f34 <phase_defused+340>
   0x0000555555555e71 <+145>:	add    $0x78,%rsp
   0x0000555555555e75 <+149>:	ret
   0x0000555555555e76 <+150>:	addl   $0xf,0x3873(%rip)        # 0x5555555596f0 <score>
   0x0000555555555e7d <+157>:	jmp    0x555555555e22 <phase_defused+66>
   0x0000555555555e7f <+159>:	addl   $0x14,0x386a(%rip)        # 0x5555555596f0 <score>
   0x0000555555555e86 <+166>:	jmp    0x555555555e22 <phase_defused+66>
   0x0000555555555e88 <+168>:	addl   $0x1e,0x3861(%rip)        # 0x5555555596f0 <score>
   0x0000555555555e8f <+175>:	jmp    0x555555555e22 <phase_defused+66>
   0x0000555555555e91 <+177>:	addl   $0xf,0x3858(%rip)        # 0x5555555596f0 <score>
   0x0000555555555e98 <+184>:	jmp    0x555555555e22 <phase_defused+66>
   0x0000555555555e9a <+186>:	addl   $0xa,0x384f(%rip)        # 0x5555555596f0 <score>
   0x0000555555555ea1 <+193>:	jmp    0x555555555e22 <phase_defused+66>
   0x0000555555555ea6 <+198>:	lea    0xc(%rsp),%rcx
   0x0000555555555eab <+203>:	lea    0x8(%rsp),%rdx
   0x0000555555555eb0 <+208>:	lea    0x10(%rsp),%r8
   0x0000555555555eb5 <+213>:	lea    0x14bc(%rip),%rsi        # 0x555555557378
   0x0000555555555ebc <+220>:	lea    0x392d(%rip),%rdi        # 0x5555555597f0 <input_strings+240>
   0x0000555555555ec3 <+227>:	mov    $0x0,%eax
   0x0000555555555ec8 <+232>:	call   0x555555555300 <__isoc99_sscanf@plt>
   0x0000555555555ecd <+237>:	cmp    $0x3,%eax
   0x0000555555555ed0 <+240>:	je     0x555555555eef <phase_defused+271>
   0x0000555555555ed2 <+242>:	lea    0x13d7(%rip),%rdi        # 0x5555555572b0
   0x0000555555555ed9 <+249>:	call   0x555555555220 <puts@plt>
   0x0000555555555ede <+254>:	lea    0x14a3(%rip),%rdi        # 0x555555557388
   0x0000555555555ee5 <+261>:	call   0x555555555220 <puts@plt>
   0x0000555555555eea <+266>:	jmp    0x555555555e5d <phase_defused+125>
   0x0000555555555eef <+271>:	lea    0x10(%rsp),%rdi
   0x0000555555555ef4 <+276>:	lea    0x1486(%rip),%rsi        # 0x555555557381
   0x0000555555555efb <+283>:	call   0x555555555adb <strings_not_equal>
   0x0000555555555f00 <+288>:	test   %eax,%eax
   0x0000555555555f02 <+290>:	jne    0x555555555ed2 <phase_defused+242>
   0x0000555555555f04 <+292>:	lea    0x12ed(%rip),%rdi        # 0x5555555571f8
   0x0000555555555f0b <+299>:	call   0x555555555220 <puts@plt>
   0x0000555555555f10 <+304>:	lea    0x1309(%rip),%rdi        # 0x555555557220
   0x0000555555555f17 <+311>:	call   0x555555555220 <puts@plt>
   0x0000555555555f1c <+316>:	mov    $0x0,%eax
   0x0000555555555f21 <+321>:	call   0x5555555559cf <secret_phase>
   0x0000555555555f26 <+326>:	lea    0x132b(%rip),%rdi        # 0x555555557258
   0x0000555555555f2d <+333>:	call   0x555555555220 <puts@plt>
   0x0000555555555f32 <+338>:	jmp    0x555555555ed2 <phase_defused+242>
   0x0000555555555f34 <+340>:	call   0x555555555250 <__stack_chk_fail@plt>

secret_phase:
   0x00005555555559cf <+0>:	endbr64
   0x00005555555559d3 <+4>:	push   %rbx
   0x00005555555559d4 <+5>:	call   0x555555555c8c <read_line>
   0x00005555555559d9 <+10>:	mov    %rax,%rdi
   0x00005555555559dc <+13>:	mov    $0xa,%edx
   0x00005555555559e1 <+18>:	mov    $0x0,%esi
   0x00005555555559e6 <+23>:	call   0x5555555552e0 <strtol@plt>
   0x00005555555559eb <+28>:	mov    %eax,%ebx
   0x00005555555559ed <+30>:	sub    $0x1,%eax
   0x00005555555559f0 <+33>:	cmp    $0x3e8,%eax
   0x00005555555559f5 <+38>:	ja     0x555555555a1d <secret_phase+78>
   0x00005555555559f7 <+40>:	mov    %ebx,%esi
   0x00005555555559f9 <+42>:	lea    0x3730(%rip),%rdi        # 0x555555559130 <n1>
   0x0000555555555a00 <+49>:	call   0x55555555598e <fun7>
   0x0000555555555a05 <+54>:	cmp    $0x7,%eax
   0x0000555555555a08 <+57>:	jne    0x555555555a24 <secret_phase+85>
   0x0000555555555a0a <+59>:	lea    0x16c7(%rip),%rdi        # 0x5555555570d8
   0x0000555555555a11 <+66>:	call   0x555555555220 <puts@plt>
   0x0000555555555a16 <+71>:	call   0x555555555de0 <phase_defused>
   0x0000555555555a1b <+76>:	pop    %rbx
   0x0000555555555a1c <+77>:	ret
   0x0000555555555a1d <+78>:	call   0x555555555bef <explode_bomb>
   0x0000555555555a22 <+83>:	jmp    0x5555555559f7 <secret_phase+40>
   0x0000555555555a24 <+85>:	call   0x555555555bef <explode_bomb>
   0x0000555555555a29 <+90>:	jmp    0x555555555a0a <secret_phase+59>

fun7:
   0x000055555555598e <+0>:	endbr64
   0x0000555555555992 <+4>:	test   %rdi,%rdi
   0x0000555555555995 <+7>:	je     0x5555555559c9 <fun7+59>
   0x0000555555555997 <+9>:	sub    $0x8,%rsp
   0x000055555555599b <+13>:	mov    (%rdi),%edx
   0x000055555555599d <+15>:	cmp    %esi,%edx
   0x000055555555599f <+17>:	jg     0x5555555559ad <fun7+31>
   0x00005555555559a1 <+19>:	mov    $0x0,%eax
   0x00005555555559a6 <+24>:	jne    0x5555555559ba <fun7+44>
   0x00005555555559a8 <+26>:	add    $0x8,%rsp
   0x00005555555559ac <+30>:	ret
   0x00005555555559ad <+31>:	mov    0x8(%rdi),%rdi
   0x00005555555559b1 <+35>:	call   0x55555555598e <fun7>
   0x00005555555559b6 <+40>:	add    %eax,%eax
   0x00005555555559b8 <+42>:	jmp    0x5555555559a8 <fun7+26>
   0x00005555555559ba <+44>:	mov    0x10(%rdi),%rdi
   0x00005555555559be <+48>:	call   0x55555555598e <fun7>
   0x00005555555559c3 <+53>:	lea    0x1(%rax,%rax,1),%eax
   0x00005555555559c7 <+57>:	jmp    0x5555555559a8 <fun7+26>
   0x00005555555559c9 <+59>:	mov    $0xffffffff,%eax
   0x00005555555559ce <+64>:	ret

0x555555559130 <n1>:	36
0x555555559138 <n1+8>:	80    ---> 0x55559150
0x555555559140 <n1+16>:	112   ---> 0x55559170

0x555555559150 <n21>:	8
0x555555559158 <n21+8>:	-48     --> 0x555591d0
0x555555559160 <n21+16>:	-112 --> 0x55559190

0x555555559170 <n22>:	50
0x555555559178 <n22+8>:	-80     --> 0x555591b0
0x555555559180 <n22+16>:	-16  --> 0x555591f0

0x555555559190 <n32>:	22
0x555555559198 <n32+8>:	-80      --> 0x555590b0
0x5555555591a0 <n32+16>:	112   --> 0x55559070

0x5555555591b0 <n33>:	45
0x5555555591b8 <n33+8>:	16       --> 0x55559010
0x5555555591c0 <n33+16>:	-48   --> 0x555590d0

0x5555555591d0 <n31>:	6
0x5555555591d8 <n31+8>:	48        --> 0x55559030
0x5555555591e0 <n31+16>:	-112   --> 0x55559090

0x5555555591f0 <n34>:	107
0x5555555591f8 <n34+8>:	80        --> 0x55559050
0x555555559200 <n34+16>:	-16    --> 0x555590f0

